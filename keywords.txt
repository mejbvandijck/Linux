CLI = command line interface
LPI = Linux Professional Institute
    chapter 2-
OS Linux systems:
Redhat(web app): Scientific Linux, CentOS, Fedora
SLS(mainframe): Slackware, SUSE + open SUSE, SLES
Debian(homeUser): Ubuntu, Linux Mint
Andriod(phone)
Raspbian(engineerDevelopment)
    \chapter 3 -
MTA = Mail Transfer Agent (Software used to transfer your messages to a remote server) Like Sendmail and Postfix.
MDA = Mail Delivery Agent (is a Local Delivery Agent) usualy invoked from MTA chain
POP = Post Office Protocol (Get email from the server and delete it so its stored localy(Used on 1 device))
IMAP = Internet Message Acces Protocol (Get email from the server and leave it there (mostly used on more devices at the same time)).
Samba = File sharing programm (Linux acts like windows)
Netatalk = File sharing programm (Linux acts like apple)
NFS = Network File Sharing (Unix/Linux)
DNS = Domain Name System (i.e. a www.adress.com converts to an IP address)
LDAP = Lightweight Directory Access Protocol (position of treeobjects and info about it)
DHCP = Dynamic Host Configuration Protocol (give computer a free IP address on bootup)
ISC = Internet System Consortium(Open Source)
SMTP = Simple Mail Transfer Protocol
POP = Point of Presence
POP3 = Post Office Protocol
POSIX = Portable Operating System Interface
PPP = Point to Point protocol
GNOME = GNU Object Modeling Environment (open source desktop environment i.e. used in Ubuntu)
KDE = (Kool) Desktop Environment
IMAP = Internet Message Access Protocol
GIMP = GNU Image Manupulation Program
Bash = Bourne again shell (developer Bourne)
tcsh = T C SHell developed with a C background
Ksh / Zsh = popular derivatives from Bash and tcsh (using the best features of both)
texteditors = Vi(Vim), Emacs are complex and pico, nano(open source) are simple
apt = Andvanced Package Tool; user friendly tool for dpkg(Debian Package Management)
rpm = Redhat Package Management *.rpm (used by Redhat, CentOS, Fedora also by SUSE, OpenSUSE and Arch)
yum = (user friendly) Front-end tool for rpm
JVM = Java Virtual Machine, compiles the code to bytecode(machinecode); to read the code you need JVM software
JavaScript = programming language (cross-platform(i.e. Linux, Windows)) used for interactive elements on webpages
Java = object-oriented programming language
Perl = interpretet language used for text manipulation
PHP = used to create dynamic webpages files a read by programmes like Apache
OpenSSL = a cryptographic library that secures information from other programms
SSH = Secure Shell, secure connection (host with another network)
FTP = File Transfer Protocol, state: passive(client/server) or active(server/client)
FTPS = Secured FTP
HTTP(S) = Hyper Text Transfer Protocol (Secure), see FTP but state doesnt matter
2FA = 2 factor authentication 
VPN = Virtual Private Network, encrypted channel of communication between two systems (can mask your IP address)
Tor(browser) = The Onion Router, Onion stands for multilayer and anonymize users of their online activities
Cloud = can be Public/Private/Community/Hybrid
Linux (in the cloud) = flexible, accessible, cost-effective, manageable, secure and virtualizable(run multible guests on a host)

API = Application Programm Interface
IEEE = Institute of Electrical and Electronics Engineers
POSIX = Portable Operating System Interface 
EULA = End User License Agreement(document with info like: only 1 copy, you may not reverse engineer, you get minor updates not major upgrades)
GPL = General Public License(anyone can use and change(and bennefits others) with this version). Introduced by Linus Torvalds
copyleft = share changes to a programm with other users
FSF = Free Software Foundation (user free software foundation protecting user freedom in the realm of software)
GNU = General Public License (use, study, modify and distribute software; any outcome from this must be distributed on the same terms)
OSI = Open Source Initiative 
BSD = Berkley Software Distribution (early version of the UNIX system)
CC = Creative Commons (address the intensions behind FOSS licenses for non-software entities: BY, SA, NC, ND)
BY = Attribution, creator must be given credit
SA = ShareAlike, This allows others to copy, distribute, perform, and modify the work, provided they do so under the same terms
NC = NonCommerical, same as SA + display except not commercially
ND = This allows others to distribute, display, and perform only original copies of the work
Attritbution variants = CC-BY(2 SA copyleft, 3 ND not change, 4 NC non commercial, 5 NC-SA share, 6 NC-ND noone change content) and CC0 is public domain

command structure = command [options] [arguments] (CaseSensitive)
-h = abbreviation is equal to --human-readable
history = to see all commands used
variable = usable in Bash to give entities names and recall them (var = ls -> $echo $var (to call the var))
echo = command is used to display output in the terminal
env = environment variables/global variables when opening a new bash (like PATH, HOME, HISTSIZE)
| = pipe command, passes the command to the next command (like env | grep)
export = passes(or creates) local to environment(global) (like export variable2='True') calling a var gives $var
PATH = directory structure like echo $PATH to show and PATH=/../..:$PATH to add a structure. the end $PATH means append the the current PATH
which = focuses on the location of the executable
type = simular to which but provides more comprehensive information about the command
alias = like as in python, create shorter commands and use those type: alias to see wich aliasses are active like alias C="cal 2019" 
functions = use C look, like my_report () {.. .. ..} this creates a function that runs each line .. .. ..
quoting = "" '' \ for comments within functions
glob = wild cards, special symbols like *, ?, []
alias = what aliases are set on the current shell (the aliasses will be lost)
"" = you can use $ variables
'' = you can not use $variables (raw text)
\ = escape char like python
`` = backquotes used to indicate a variable within a text
; = used to run multiple commands like x; you
&& = and
||   = or (double pipe is the logical or)
man = manual page for a command 'h' help for moving in the list 'q' for quoting
[] = example: [[month] year] can be run without both, only with year, but if you use month you need to add year too.
/ = to find text in the manual like man man your in the manual of man. then use /file to find all text with file in it.
man -k = use -k copy to find all commands with copy in it (apropos is the same on most Linux systems)
whereis = find commands and man pages. it returns a PATH
locate = search in all files locate -c -b "\passwd" (number(-c) of matches of all files(-b) with exact(\) passwd)
info = expanded verion of man. <shift+H> for help in navigating ; 'q' is quit

metadata = associated details about the file
drwxr-xr-x = ONLY first letter is d(dir) -(file) l(link) s(socket) p(pip) b(block file) c(character file)
drwxr-xr-x = Next are the permission letters (rwx)

ls / = show folders rootdir
ls -d = directory info like what's the info in the directories in the directory
pwd = print work dir like /usr/bob


